import { useRouter } from 'next/router'
import Head from 'next/head'
import { Box, Flex, Text, Button } from '@chakra-ui/react'
import cookie from 'cookie'

import Image from 'next/image'
import principalImage from '../public/principal.jpg'

import { AiTwotoneEdit } from 'react-icons/ai'
import { IoDocumentTextSharp } from 'react-icons/io5'
import { RiSendPlaneFill } from 'react-icons/ri'

export default function Home() {
    const router = useRouter()

    return (
        <Box>
            <Head>
                <title>Contratos</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Box bgColor="#fff">
                <Flex
                    id="navbar"
                    px="10vw"
                    py="1rem"
                    justifyContent="space-between"
                    alignItems="center"
                    pos="sticky"
                    top="0"
                    zIndex={999}
                    bgColor="#fff"
                    borderBottom="1px solid rgba(0, 0, 0, 0.05)"
                    boxShadow="0 2px 12px 0 rgba(0, 0, 0, 0.1)"
                >
                    <Flex>
                        <Text textTransform="uppercase" fontSize={["1.5rem", "1.5rem", "2rem"]} fontWeight="500" pr="10" fontFamily="PoppinsRegular">Contratos</Text>
                        <Flex alignItems="center" display={['none', 'none', 'flex']}>
                            <Button variant="link" colorScheme="gray" fontSize="0.8rem" textTransform="uppercase" pr="10">Como funciona</Button>
                            <Button variant="link" colorScheme="gray" fontSize="0.8rem" textTransform="uppercase" pr="10">Preços</Button>
                            <Button variant="link" colorScheme="gray" fontSize="0.8rem" textTransform="uppercase" pr="10">Sobre</Button>
                        </Flex>
                    </Flex>
                    <Box>
                        <Button variant="outline" colorScheme="telegram" fontSize={["0.8rem", "0.8rem", "1rem"]} onClick={() => router.push('/signin')}>Entrar</Button>
                    </Box>
                </Flex>
                <Box id="home-content" bgColor="#000">
                    <Box pos="relative">
                        <Box
                            w={["auto", "auto", "400px"]}
                            pos="absolute"
                            left={["0", "0", "55%"]}
                            top={["0", "0", "25%"]}
                            color="#000"
                            zIndex={998}
                            visibility={['hidden', 'hidden', 'visible']}
                        >
                            <Text fontSize={["1.5rem", "1.5rem", "2.5rem"]} textTransform="uppercase" fontWeight="500" fontFamily="SourceCode">
                                Evolua a sua maneira de criar contratos
                            </Text>
                            <Button colorScheme="whatsapp" fontSize={["1rem", "1rem", "2.5rem"]} p={["2", "2", "8"]}>Experimente</Button>
                        </Box>
                        <Image src={principalImage} alt="homem segurando pasta" />
                        <Box className='gradient-img'></Box>
                    </Box>
                    <Flex flexDir="column" justifyContent="center" alignItems="center" my={["0", "4", "10"]} p={["5", "8", "10"]}>
                        <Text color="#fff" fontSize="2rem" textTransform="uppercase" fontWeight="600" fontFamily="SourceCode" textAlign="center">
                            Faça os seus contratos de forma simples e fácil
                        </Text>
                        <Flex w="100%" my={["20", "20", "40"]} flexDir={["column", "column", "row"]} justifyContent="space-around" alignItems="center" color="#fff">
                            <Flex flexDir="column" alignItems="center" justifyContent="space-around" w={["90%", "70%", "400px"]} h="180px" pb={["4rem", "4rem", "0"]}>
                                <IoDocumentTextSharp fontSize="3.5rem" />
                                <Text textAlign="center" fontFamily="Ubuntu" fontSize="1.2rem">
                                    Elabore o seu contrato na nossa plataforma, adicione cláusulas e assinaturas.
                                </Text>
                            </Flex>
                            <Flex flexDir="column" alignItems="center" justifyContent="space-around" w={["90%", "70%", "400px"]} h="180px" pb={["4rem", "4rem", "0"]}>
                                <AiTwotoneEdit fontSize="3.5rem" />
                                <Text textAlign="center" fontFamily="Ubuntu" fontSize="1.2rem">
                                    Aguarde o seu contrato ser assinados por todos os interessados.
                                </Text>
                            </Flex>
                            <Flex flexDir="column" alignItems="center" justifyContent="space-around" w={["90%", "70%", "400px"]} h="180px" pb={["4rem", "4rem", "0"]}>
                                <RiSendPlaneFill fontSize="3.5rem" />
                                <Text textAlign="center" fontFamily="Ubuntu" fontSize="1.2rem">
                                    Salve o seu contrato como um NFT na rede do Ethereum.
                                </Text>
                            </Flex>
                        </Flex>
                    </Flex>
                    <Box h="1000px" bgColor="#fff">

                    </Box>
                </Box>
            </Box>
        </Box>
    )
}

export function getServerSideProps({ req }) {
    const cookies = cookie.parse(req.headers.cookie || '')

    if (cookies.token && cookies.token != 'undefined')
        return {
            redirect: {
                destination: '/home',
                permanent: false
            }
        }

    return {
        props: {}
    }
}